/*
 * Copyright 2020 Hippo Seven
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.nio.charset.Charset

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "kotlin"

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

sourceSets {
    main {
        kotlin.srcDirs += "src/main/kotlin-gen"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.github.seven332.kotlin-telegram-bot:telegram:44d5f23fef"
    implementation "org.jetbrains.exposed:exposed-core:0.28.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.28.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.28.1"
    implementation "org.xerial:sqlite-jdbc:3.32.3.2"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

jar {
    manifest {
        attributes "Main-Class": "com.hippo.panda.sheriff.MainKt"
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task preBuild {
    Properties prop = new Properties()
    FileReader reader = new FileReader("bot.release.properties", Charset.forName("UTF-8"))
    prop.load(reader)

    Writer writer = new FileWriter("src/main/kotlin/com/hippo/panda/sheriff/Gen.kt")
    writer.write("package com.hippo.panda.sheriff\n")
    writer.write("\n")
    writer.write("import com.hippo.panda.sheriff.base.Configure\n")
    writer.write("\n")
    writer.write("class RealConfigure: Configure {\n")
    writer.write("    override val dbPath: String\n")
    writer.write("        get() = \"" + prop.get("dbPath") + "\"\n")
    writer.write("    override val botToken: String\n")
    writer.write("        get() = \"" + prop.get("botToken") + "\"\n")
    writer.write("    override val chatId: Long\n")
    writer.write("        get() = " + prop.get("chatId") + "\n")
    writer.write("    override val updateAdminsInterval: Long\n")
    writer.write("        get() = " + prop.get("updateAdminsInterval") + "\n")
    writer.write("    override val banDuration: Long\n")
    writer.write("        get() = " + prop.get("banDuration") + "\n")
    writer.write("    override val recaptchaLife: Long\n")
    writer.write("        get() = " + prop.get("recaptchaLife") + "\n")
    writer.write("    override val welcomeMessage: String\n")
    writer.write("        get() = \"" + prop.get("welcomeMessage") + "\"\n")
    writer.write("}\n")
    writer.close()
}

compileKotlin.dependsOn preBuild
